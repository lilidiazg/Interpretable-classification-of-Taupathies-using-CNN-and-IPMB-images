{"nbformat":4,"nbformat_minor":5,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"},"papermill":{"default_parameters":{},"duration":2125.183064,"end_time":"2021-05-26T21:10:25.660718","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2021-05-26T20:35:00.477654","version":"2.3.3"},"colab":{"name":"Copia de Freezing Corteza Entorrinal (PSP-ALZ) ResNet50 Stratified k-fold ","provenance":[{"file_id":"1NmXonopJCyx0hoe4stUd9ewlOWvz80Ep","timestamp":1634339971150},{"file_id":"1pdW9fo1eB_wbcqCjreioUteMqEf_hNb1","timestamp":1630697597061},{"file_id":"1dVsjiRwMHsjYhhiSg0hdgC3kXnQGB27j","timestamp":1630459127140},{"file_id":"1NO0gVPFH_06KYbBPoHn-XIUNyiRHObLL","timestamp":1630449473850},{"file_id":"1zWf91pQvwuiZRZOikIxW9M3MmsykViXd","timestamp":1630445656641},{"file_id":"17EZHUwhcW6HXwxiOcGG4dOxnebYjOPDv","timestamp":1629476215967},{"file_id":"1DLnDo7kRjaeKOwxSFDHnDK7WCJ7_b5VK","timestamp":1628830620228},{"file_id":"1JqdLEMDHzq9ERRh-IY7TXoWIooa_-Njy","timestamp":1628621176568},{"file_id":"1IdOJfJkj4NZm8VyRU01ftorT5-EmxKoG","timestamp":1628185254757},{"file_id":"1qnv0xEw7o6b-Ms5_JzXk6YbzOQU0lKK4","timestamp":1625788891673},{"file_id":"1_oawwq4AzwbtsWy0q5-YGqGoLinv7-Kh","timestamp":1625682688097}],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"papermill":{"duration":0.043874,"end_time":"2021-05-26T20:35:10.815427","exception":false,"start_time":"2021-05-26T20:35:10.771553","status":"completed"},"tags":[],"id":"BZEcvGso6V_Y"},"source":["# Importing Libraries"],"id":"BZEcvGso6V_Y"},{"cell_type":"code","metadata":{"_kg_hide-output":true,"execution":{"iopub.execute_input":"2021-05-26T20:35:10.913772Z","iopub.status.busy":"2021-05-26T20:35:10.911469Z","iopub.status.idle":"2021-05-26T20:35:20.151829Z","shell.execute_reply":"2021-05-26T20:35:20.152225Z","shell.execute_reply.started":"2021-05-26T15:47:32.079993Z"},"papermill":{"duration":9.292967,"end_time":"2021-05-26T20:35:20.152459","exception":false,"start_time":"2021-05-26T20:35:10.859492","status":"completed"},"tags":[],"id":"HGmDRL0J6V_Z"},"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import cv2\n","import tensorflow as tf\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tqdm import tqdm\n","import os\n","from sklearn.utils import shuffle\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import StratifiedKFold"],"id":"HGmDRL0J6V_Z","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"_kg_hide-output":true,"execution":{"iopub.execute_input":"2021-05-26T20:35:10.913772Z","iopub.status.busy":"2021-05-26T20:35:10.911469Z","iopub.status.idle":"2021-05-26T20:35:20.151829Z","shell.execute_reply":"2021-05-26T20:35:20.152225Z","shell.execute_reply.started":"2021-05-26T15:47:32.079993Z"},"papermill":{"duration":9.292967,"end_time":"2021-05-26T20:35:20.152459","exception":false,"start_time":"2021-05-26T20:35:10.859492","status":"completed"},"tags":[],"id":"uoGVfmKj6V_b"},"source":["from tensorflow.keras.applications.resnet50 import (\n","    ResNet50,\n","    preprocess_input,\n","    decode_predictions,\n",")\n","from tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau, TensorBoard, ModelCheckpoint"],"id":"uoGVfmKj6V_b","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"_kg_hide-output":true,"execution":{"iopub.execute_input":"2021-05-26T20:35:10.913772Z","iopub.status.busy":"2021-05-26T20:35:10.911469Z","iopub.status.idle":"2021-05-26T20:35:20.151829Z","shell.execute_reply":"2021-05-26T20:35:20.152225Z","shell.execute_reply.started":"2021-05-26T15:47:32.079993Z"},"papermill":{"duration":9.292967,"end_time":"2021-05-26T20:35:20.152459","exception":false,"start_time":"2021-05-26T20:35:10.859492","status":"completed"},"tags":[],"id":"rBTT4A8c6V_c"},"source":["from sklearn.metrics import classification_report,confusion_matrix\n","import ipywidgets as widgets\n","import io\n","from PIL import Image\n","from IPython.display import display,clear_output\n","from warnings import filterwarnings"],"id":"rBTT4A8c6V_c","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zOtqhijSv6we"},"source":["from tensorflow import keras\n","from tensorflow.keras import layers"],"id":"zOtqhijSv6we","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Nd6l6yE6nwa","executionInfo":{"status":"ok","timestamp":1634605295860,"user_tz":300,"elapsed":20906,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"8f27d703-b4f0-47aa-dfab-779be5d92ef2"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"id":"6Nd6l6yE6nwa","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"papermill":{"duration":0.033647,"end_time":"2021-05-26T20:35:20.287642","exception":false,"start_time":"2021-05-26T20:35:20.253995","status":"completed"},"tags":[],"id":"7wUEja_b6V_h"},"source":["# Color"],"id":"7wUEja_b6V_h"},{"cell_type":"code","metadata":{"execution":{"iopub.execute_input":"2021-05-26T20:35:20.379234Z","iopub.status.busy":"2021-05-26T20:35:20.369046Z","iopub.status.idle":"2021-05-26T20:35:20.816937Z","shell.execute_reply":"2021-05-26T20:35:20.816436Z","shell.execute_reply.started":"2021-05-26T15:45:32.514938Z"},"papermill":{"duration":0.495697,"end_time":"2021-05-26T20:35:20.817049","exception":false,"start_time":"2021-05-26T20:35:20.321352","status":"completed"},"tags":[],"colab":{"base_uri":"https://localhost:8080/","height":232},"id":"AXDtwFPs6V_h","executionInfo":{"status":"ok","timestamp":1634605270758,"user_tz":300,"elapsed":487,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"6c8fabc7-98eb-4798-9ea6-a7e7cee8f0f0"},"source":["colors_dark = [\"#1F1F1F\", \"#313131\", '#636363', '#AEAEAE', '#DADADA']\n","colors_red = [\"#331313\", \"#582626\", '#9E1717', '#D35151', '#E9B4B4']\n","colors_green = ['#01411C','#4B6F44','#4F7942','#74C365','#D0F0C0']\n","\n","sns.palplot(colors_dark)\n","sns.palplot(colors_green)\n","sns.palplot(colors_red)"],"id":"AXDtwFPs6V_h","execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAASgAAABICAYAAABFhGj3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAABxElEQVR4nO3YMWoCURiF0TeZacRCkFhYpbOykuzCHWZNKW0s09tlAS99SCADvrzrcE45qNy/+WAcaq0FINFT7wEAvxEoIJZAAbEECoglUEAsgQJiTXM+PI5jnaZZX3ko4zj2ntDUer3uPaGZzWbTe0JTq9Wq94SmLpfLrda6+/58Vm2maSr7/f5+q8Jst9veE5o6nU69JzRzPp97T2jqeDz2ntDU4XD4+Om5VzwglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQKyh1vr3Dw/DZynl2m5Od8+llFvvEY0s+bZS3PfoXmqtu+8Pp5k/cq21vt5pUJxhGN6Xet+SbyvFfUvlFQ+IJVBArLmBemuyIseS71vybaW4b5Fm/UkO8J+84gGxBAqIJVBALIECYgkUEOsLPOc1coImuH0AAAAASUVORK5CYII=\n","text/plain":["<Figure size 360x72 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAASgAAABICAYAAABFhGj3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAABzUlEQVR4nO3YsUqjQRiF4RkJbrRRdMVyi0WwUSwsLay9hd0r85osrAS3297O3rEXBX9wnJPhecqfJJyveUNSW2sFINHW6AEAHxEoIJZAAbEECoglUEAsgQJirZa8uG5vtbJe9JaNsrezHj2hr4m/jtZ7P0ZP6Opw52D0hK4e7v89tdaO3j5fVpv1qtTL4y8blebq/HT0hK5Wuy+jJ3RzcvN79ISu/p79GT2hq4v96//vPZ/4OxXYdAIFxBIoIJZAAbEECoglUEAsgQJiCRQQS6CAWAIFxBIoIJZAAbEECoglUEAsgQJiCRQQS6CAWAIFxBIoIJZAAbEECoglUEAsgQJiCRQQS6CAWAIFxBIoIJZAAbEECoglUEAsgQJiCRQQS6CAWAIFxBIoIJZAAbEECoglUEAsgQJiCRQQS6CAWAIFxBIoIJZAAbEECoglUEAsgQJiCRQQS6CAWAIFxBIoIJZAAbFqa+3zL671uZTy2G/OcD9LKU+jR3Qy822luG/T/WqtHb19uFr4IY+ttcsvGhSn1no3630z31aK+2blJx4QS6CAWEsDddtlRY6Z75v5tlLcN6VFf5IDfCc/8YBYAgXEEigglkABsQQKiPUKRmA2ZCNXxLUAAAAASUVORK5CYII=\n","text/plain":["<Figure size 360x72 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAASgAAABICAYAAABFhGj3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAABzElEQVR4nO3YMUpDQRiF0XmPSApFBKOWVhb22rgAK3fhrlyTjaVgY28TrGXsRcEHjnMznFM+gtw/kA+TqdZaABLNvQcA/ESggFgCBcQSKCCWQAGxBAqItVr04nmu63ncpq1Xi96OnXP48dF7QjP7Bwe9JzS1t9n0ntDU08vLW6315OvzRZ/I9TyXy6Ojv1sV5uL4uPeEpm63294Tmrm+uek9oanT+/veE5o6u7t7/e75uP8OATtPoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigglkABsQQKiCVQQCyBAmIJFBBLoIBYAgXEEigg1lRr/f2Lp+m9lPLcbk53m1LKW+8RjYx8Wynu23XntdaTrw9XC//Ic6316o8GxZmm6XHU+0a+rRT3jcpXPCCWQAGxlgbqocmKHCPfN/JtpbhvSIt+JAf4T77iAbEECoglUEAsgQJiCRQQ6xP/aTlzEB3T3QAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 360x72 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"papermill":{"duration":0.035115,"end_time":"2021-05-26T20:35:20.887716","exception":false,"start_time":"2021-05-26T20:35:20.852601","status":"completed"},"tags":[],"id":"yQmywVwn6V_i"},"source":["---"],"id":"yQmywVwn6V_i"},{"cell_type":"markdown","metadata":{"papermill":{"duration":0.035461,"end_time":"2021-05-26T20:35:20.958769","exception":false,"start_time":"2021-05-26T20:35:20.923308","status":"completed"},"tags":[],"id":"zoHC6PT56V_j"},"source":["# Data Preperation"],"id":"zoHC6PT56V_j"},{"cell_type":"code","metadata":{"execution":{"iopub.execute_input":"2021-05-26T20:35:21.033921Z","iopub.status.busy":"2021-05-26T20:35:21.033448Z","iopub.status.idle":"2021-05-26T20:35:21.038512Z","shell.execute_reply":"2021-05-26T20:35:21.038043Z","shell.execute_reply.started":"2021-05-26T15:45:33.333592Z"},"papermill":{"duration":0.0447,"end_time":"2021-05-26T20:35:21.038626","exception":false,"start_time":"2021-05-26T20:35:20.993926","status":"completed"},"tags":[],"id":"LACUB42F6V_j"},"source":["labels = ['PSP','Alzheimer']"],"id":"LACUB42F6V_j","execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["For enthorinal cortex"],"metadata":{"id":"dCLu8BcglM2h"},"id":"dCLu8BcglM2h"},{"cell_type":"code","metadata":{"execution":{"iopub.execute_input":"2021-05-26T20:35:21.191453Z","iopub.status.busy":"2021-05-26T20:35:21.190916Z","iopub.status.idle":"2021-05-26T20:35:49.880360Z","shell.execute_reply":"2021-05-26T20:35:49.879957Z","shell.execute_reply.started":"2021-05-26T15:50:22.385565Z"},"papermill":{"duration":28.732063,"end_time":"2021-05-26T20:35:49.880496","exception":false,"start_time":"2021-05-26T20:35:21.148433","status":"completed"},"tags":[],"colab":{"base_uri":"https://localhost:8080/"},"id":"IDDS1kA86V_k","executionInfo":{"status":"ok","timestamp":1634605964649,"user_tz":300,"elapsed":668792,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"9410ba59-eaa2-47fd-eec8-7f1a2c3879d3"},"source":["X_train = []\n","y_train = []\n","image_size = 150\n","for i in labels:\n","    folderPath = os.path.join('/content/drive/MyDrive/Tesis Maestria/Dataset 31-8-21 TIF (ALZ-PSP Corteza Entorrinal2)','Training',i)\n","    for j in tqdm(os.listdir(folderPath)):\n","        img = cv2.imread(os.path.join(folderPath,j))\n","        img = cv2.resize(img,(image_size,image_size))\n","        X_train.append(img)\n","        y_train.append(i)\n","        \n","for i in labels:\n","    folderPath = os.path.join('/content/drive/MyDrive/Tesis Maestria/Dataset 31-8-21 TIF (ALZ-PSP Corteza Entorrinal2)','Testing',i)\n","    for j in tqdm(os.listdir(folderPath)):\n","        img = cv2.imread(os.path.join(folderPath,j))\n","        img = cv2.resize(img,(image_size,image_size))\n","        X_train.append(img)\n","        y_train.append(i)\n","        \n","X_train = np.array(X_train)\n","y_train = np.array(y_train)"],"id":"IDDS1kA86V_k","execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 252/252 [03:28<00:00,  1.21it/s]\n","100%|██████████| 328/328 [05:50<00:00,  1.07s/it]\n","100%|██████████| 56/56 [01:02<00:00,  1.11s/it]\n","100%|██████████| 65/65 [00:43<00:00,  1.50it/s]\n"]}]},{"cell_type":"markdown","source":["For hippocampus"],"metadata":{"id":"sGpePM5rlPQp"},"id":"sGpePM5rlPQp"},{"cell_type":"code","source":["X_train = []\n","y_train = []\n","image_size = 150\n","for i in labels:\n","    folderPath = os.path.join('/content/drive/MyDrive/Tesis Maestria/Dataset 31-8-21 TIF (ALZ-PSP Hipocampo2)','Training',i)\n","    for j in tqdm(os.listdir(folderPath)):\n","        img = cv2.imread(os.path.join(folderPath,j))\n","        img = cv2.resize(img,(image_size,image_size))\n","        X_train.append(img)\n","        y_train.append(i)\n","        \n","for i in labels:\n","    folderPath = os.path.join('/content/drive/MyDrive/Tesis Maestria/Dataset 31-8-21 TIF (ALZ-PSP Hipocampo2)','Testing',i)\n","    for j in tqdm(os.listdir(folderPath)):\n","        img = cv2.imread(os.path.join(folderPath,j))\n","        img = cv2.resize(img,(image_size,image_size))\n","        X_train.append(img)\n","        y_train.append(i)\n","        \n","X_train = np.array(X_train)\n","y_train = np.array(y_train)"],"metadata":{"id":"Z0lKvFRHlc2A"},"id":"Z0lKvFRHlc2A","execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["For hippocampus and enthorinal cortex"],"metadata":{"id":"bbx0_ZCxlQaU"},"id":"bbx0_ZCxlQaU"},{"cell_type":"code","source":["X_train = []\n","y_train = []\n","image_size = 150\n","for i in labels:\n","    folderPath = os.path.join('/content/drive/MyDrive/Tesis Maestria/Dataset 14-9-21 TIF (ALZ-PSP clases) Hipocampo y Corteza Entorrinal','Training',i)\n","    for j in tqdm(os.listdir(folderPath)):\n","        img = cv2.imread(os.path.join(folderPath,j))\n","        img = cv2.resize(img,(image_size,image_size))\n","        X_train.append(img)\n","        y_train.append(i)\n","        \n","for i in labels:\n","    folderPath = os.path.join('/content/drive/MyDrive/Tesis Maestria/Dataset 14-9-21 TIF (ALZ-PSP clases) Hipocampo y Corteza Entorrinal','Testing',i)\n","    for j in tqdm(os.listdir(folderPath)):\n","        img = cv2.imread(os.path.join(folderPath,j))\n","        img = cv2.resize(img,(image_size,image_size))\n","        X_train.append(img)\n","        y_train.append(i)\n","        \n","X_train = np.array(X_train)\n","y_train = np.array(y_train)"],"metadata":{"id":"7q4XQRZsleBq"},"id":"7q4XQRZsleBq","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"_kg_hide-input":true,"execution":{"iopub.execute_input":"2021-05-26T20:35:50.137189Z","iopub.status.busy":"2021-05-26T20:35:50.134947Z","iopub.status.idle":"2021-05-26T20:35:50.502170Z","shell.execute_reply":"2021-05-26T20:35:50.502678Z","shell.execute_reply.started":"2021-05-26T16:38:33.530731Z"},"papermill":{"duration":0.518207,"end_time":"2021-05-26T20:35:50.502834","exception":false,"start_time":"2021-05-26T20:35:49.984627","status":"completed"},"tags":[],"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"toP5NnHY6V_m","executionInfo":{"status":"ok","timestamp":1634406435547,"user_tz":300,"elapsed":538,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"f797be21-cedd-4344-838f-d1096ebe286d"},"source":["k=0\n","fig, ax = plt.subplots(1,2,figsize=(10,10))\n","fig.text(s='Sample Image From Each Label',size=14,fontweight='bold',\n","             fontname='monospace',color=colors_dark[1],y=0.73,x=0.38,alpha=0.8)\n","for i in labels:\n","    j=0\n","    while True :\n","        if y_train[j]==i:\n","            ax[k].imshow(X_train[j])\n","            ax[k].set_title(y_train[j])\n","            ax[k].axis('off')\n","            k+=1\n","            break\n","        j+=1"],"id":"toP5NnHY6V_m","execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"execution":{"iopub.execute_input":"2021-05-26T20:35:50.836254Z","iopub.status.busy":"2021-05-26T20:35:50.835583Z","iopub.status.idle":"2021-05-26T20:35:50.893065Z","shell.execute_reply":"2021-05-26T20:35:50.892660Z","shell.execute_reply.started":"2021-05-26T16:38:33.912677Z"},"papermill":{"duration":0.224541,"end_time":"2021-05-26T20:35:50.893200","exception":false,"start_time":"2021-05-26T20:35:50.668659","status":"completed"},"tags":[],"id":"qEQwJLkP6V_n"},"source":["X_train, y_train = shuffle(X_train,y_train, random_state=101)"],"id":"qEQwJLkP6V_n","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"execution":{"iopub.execute_input":"2021-05-26T20:35:51.121777Z","iopub.status.busy":"2021-05-26T20:35:51.121029Z","iopub.status.idle":"2021-05-26T20:35:51.125949Z","shell.execute_reply":"2021-05-26T20:35:51.125480Z","shell.execute_reply.started":"2021-05-26T15:51:16.823536Z"},"papermill":{"duration":0.121793,"end_time":"2021-05-26T20:35:51.126053","exception":false,"start_time":"2021-05-26T20:35:51.004260","status":"completed"},"tags":[],"colab":{"base_uri":"https://localhost:8080/"},"id":"7GGW-DGl6V_o","executionInfo":{"status":"ok","timestamp":1634605972035,"user_tz":300,"elapsed":258,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"6a1fed78-60a1-4abc-ec39-1ad110cd9f5a"},"source":["X_train.shape"],"id":"7GGW-DGl6V_o","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(701, 150, 150, 3)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","metadata":{"execution":{"iopub.execute_input":"2021-05-26T20:35:51.566047Z","iopub.status.busy":"2021-05-26T20:35:51.565415Z","iopub.status.idle":"2021-05-26T20:35:51.847625Z","shell.execute_reply":"2021-05-26T20:35:51.846923Z"},"papermill":{"duration":0.395379,"end_time":"2021-05-26T20:35:51.847766","exception":false,"start_time":"2021-05-26T20:35:51.452387","status":"completed"},"scrolled":true,"tags":[],"colab":{"base_uri":"https://localhost:8080/"},"id":"RtDbAu7s6V_p","executionInfo":{"status":"ok","timestamp":1634406443416,"user_tz":300,"elapsed":206,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"9ef71da0-9d80-4ad7-eabe-4c22af918e27"},"source":["datagen = ImageDataGenerator(\n","    rotation_range=30,\n","    width_shift_range=0.1,\n","    height_shift_range=0.1,\n","    zoom_range=0.2,\n","    horizontal_flip=True)\n","\n","datagen.fit(X_train)\n","X_train.shape"],"id":"RtDbAu7s6V_p","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(701, 150, 150, 3)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"execution":{"iopub.execute_input":"2021-05-26T20:35:52.515357Z","iopub.status.busy":"2021-05-26T20:35:52.514474Z","iopub.status.idle":"2021-05-26T20:35:52.552215Z","shell.execute_reply":"2021-05-26T20:35:52.551772Z"},"papermill":{"duration":0.20569,"end_time":"2021-05-26T20:35:52.552333","exception":false,"start_time":"2021-05-26T20:35:52.346643","status":"completed"},"tags":[],"id":"dotRgzj_6V_q"},"source":["X_train,X_test,y_train,y_test = train_test_split(X_train,y_train, test_size=0.1,random_state=101)"],"id":"dotRgzj_6V_q","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"execution":{"iopub.execute_input":"2021-05-26T20:35:53.002790Z","iopub.status.busy":"2021-05-26T20:35:53.002269Z","iopub.status.idle":"2021-05-26T20:35:53.006503Z","shell.execute_reply":"2021-05-26T20:35:53.006015Z"},"papermill":{"duration":0.12369,"end_time":"2021-05-26T20:35:53.006617","exception":false,"start_time":"2021-05-26T20:35:52.882927","status":"completed"},"tags":[],"id":"E08p6YTK6V_s"},"source":["y_train_new = []\n","for i in y_train:\n","    y_train_new.append(labels.index(i))\n","y_train = y_train_new\n","y_train = tf.keras.utils.to_categorical(y_train)\n"],"id":"E08p6YTK6V_s","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"m4nsdO-5Ek0t"},"source":["y_test_new = []\n","for i in y_test:\n","    y_test_new.append(labels.index(i))\n","y_test = y_test_new\n","y_test = tf.keras.utils.to_categorical(y_test)"],"id":"m4nsdO-5Ek0t","execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PJFcootvez0K"},"source":["## If you want to apply k-Fold Cross validation"],"id":"PJFcootvez0K"},{"cell_type":"code","metadata":{"id":"HIYU6AiUL6k6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634605981354,"user_tz":300,"elapsed":610,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"895e5fc6-4a14-47ec-ed51-53652336a1f5"},"source":["skf = StratifiedKFold(n_splits=10, shuffle=True)\n","skf.get_n_splits(X_train, y_train)"],"id":"HIYU6AiUL6k6","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-GWwvisEL_XV","executionInfo":{"status":"ok","timestamp":1634608351474,"user_tz":300,"elapsed":2357285,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"e7614dc6-5285-49d5-df1b-6e07c8f6fe74"},"source":["cvscores = []\n","for train, test in skf.split(X_train, y_train.argmax(1)):\n","  base_model = keras.applications.ResNet50(weights='imagenet',include_top=False,input_shape=(150,150,3))\n","  base_model.trainable=False\n","  inputs = keras.Input(shape=(150, 150, 3))\n","  data_augmentation = keras.Sequential(\n","      [layers.RandomFlip(\"horizontal\"), layers.RandomRotation(0.1),]\n","  )\n","  x = data_augmentation(inputs) \n","  x = base_model(x, training=False)\n","  x = keras.layers.Conv2D(512, (1, 1), strides=(2,2),\n","                        kernel_initializer='he_normal',\n","                        name='conv6_block1_1_conv')(x)\n","  x = layers.BatchNormalization(axis=3, name='conv6_block1_1_bn')(x)\n","  x = layers.Activation('relu',name='conv6_block1_1_relu')(x)\n","  x = keras.layers.GlobalAveragePooling2D()(x)\n","  outputs = keras.layers.Dense(2,activation='softmax',kernel_regularizer='l2')(x)\n","  model = keras.Model(inputs, outputs)\n","  model.compile(loss='categorical_crossentropy',optimizer = 'Adam', metrics= ['accuracy'])\n","  reduce_lr = ReduceLROnPlateau(monitor = 'val_accuracy', factor = 0.3, patience = 3, min_delta = 0.001,\n","                                mode='auto',verbose=1)\n","  model.fit(X_train[train], y_train[train],validation_split=0.1, epochs = 15, verbose=1, batch_size=10, callbacks=[reduce_lr])\n","  base_model.trainable=True\n","  model.compile(loss='categorical_crossentropy',optimizer=keras.optimizers.Adam(1e-5), metrics= ['accuracy'])\n","  model.fit(X_train[train], y_train[train],validation_split=0.1, epochs = 10, verbose=1, batch_size=10, callbacks=[reduce_lr])\n","  scores = model.evaluate(X_train[test], y_train[test], verbose=0)\n","  print(scores[1]*100)\n","  cvscores.append(scores[1] * 100)"],"id":"-GWwvisEL_XV","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94773248/94765736 [==============================] - 1s 0us/step\n","94781440/94765736 [==============================] - 1s 0us/step\n","Epoch 1/15\n","57/57 [==============================] - 40s 108ms/step - loss: 0.6055 - accuracy: 0.7213 - val_loss: 0.5457 - val_accuracy: 0.7302\n","Epoch 2/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.3603 - accuracy: 0.8571 - val_loss: 0.2249 - val_accuracy: 0.9365\n","Epoch 3/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.2938 - accuracy: 0.8995 - val_loss: 0.2662 - val_accuracy: 0.9048\n","Epoch 4/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.2405 - accuracy: 0.9048 - val_loss: 0.2443 - val_accuracy: 0.8889\n","Epoch 5/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.2420 - accuracy: 0.9189 - val_loss: 0.2990 - val_accuracy: 0.8889\n","\n","Epoch 00005: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 6/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1876 - accuracy: 0.9436 - val_loss: 0.2180 - val_accuracy: 0.9048\n","Epoch 7/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1821 - accuracy: 0.9524 - val_loss: 0.2052 - val_accuracy: 0.9841\n","Epoch 8/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1668 - accuracy: 0.9453 - val_loss: 0.1858 - val_accuracy: 0.9524\n","Epoch 9/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1767 - accuracy: 0.9506 - val_loss: 0.1619 - val_accuracy: 0.9524\n","Epoch 10/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1730 - accuracy: 0.9453 - val_loss: 0.1866 - val_accuracy: 0.9524\n","\n","Epoch 00010: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 11/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1755 - accuracy: 0.9471 - val_loss: 0.1529 - val_accuracy: 0.9841\n","Epoch 12/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1425 - accuracy: 0.9612 - val_loss: 0.1671 - val_accuracy: 0.9683\n","Epoch 13/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1394 - accuracy: 0.9630 - val_loss: 0.1611 - val_accuracy: 0.9365\n","\n","Epoch 00013: ReduceLROnPlateau reducing learning rate to 2.700000040931627e-05.\n","Epoch 14/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1221 - accuracy: 0.9700 - val_loss: 0.1581 - val_accuracy: 0.9841\n","Epoch 15/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1307 - accuracy: 0.9718 - val_loss: 0.1610 - val_accuracy: 0.9683\n","Epoch 1/10\n","57/57 [==============================] - 21s 240ms/step - loss: 0.2319 - accuracy: 0.9277 - val_loss: 0.1215 - val_accuracy: 0.9841\n","Epoch 2/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.1598 - accuracy: 0.9541 - val_loss: 0.1769 - val_accuracy: 0.9841\n","Epoch 3/10\n","57/57 [==============================] - 12s 205ms/step - loss: 0.1306 - accuracy: 0.9647 - val_loss: 0.2526 - val_accuracy: 0.9048\n","Epoch 4/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.1486 - accuracy: 0.9559 - val_loss: 0.1719 - val_accuracy: 0.9683\n","\n","Epoch 00004: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 5/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.1385 - accuracy: 0.9506 - val_loss: 0.1568 - val_accuracy: 0.9683\n","Epoch 6/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.0807 - accuracy: 0.9894 - val_loss: 0.1328 - val_accuracy: 0.9841\n","Epoch 7/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.0789 - accuracy: 0.9912 - val_loss: 0.1361 - val_accuracy: 0.9841\n","\n","Epoch 00007: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","Epoch 8/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0877 - accuracy: 0.9894 - val_loss: 0.1336 - val_accuracy: 0.9841\n","Epoch 9/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.0865 - accuracy: 0.9824 - val_loss: 0.1342 - val_accuracy: 0.9841\n","Epoch 10/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0724 - accuracy: 0.9894 - val_loss: 0.1357 - val_accuracy: 0.9841\n","\n","Epoch 00010: ReduceLROnPlateau reducing learning rate to 2.6999999249710525e-07.\n","98.591548204422\n","Epoch 1/15\n","57/57 [==============================] - 10s 100ms/step - loss: 0.5947 - accuracy: 0.7319 - val_loss: 0.3362 - val_accuracy: 0.8281\n","Epoch 2/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.3265 - accuracy: 0.8677 - val_loss: 0.2921 - val_accuracy: 0.8906\n","Epoch 3/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.3313 - accuracy: 0.8942 - val_loss: 0.2417 - val_accuracy: 0.9219\n","Epoch 4/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.2698 - accuracy: 0.9101 - val_loss: 0.1960 - val_accuracy: 0.8906\n","Epoch 5/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.2106 - accuracy: 0.9383 - val_loss: 0.1931 - val_accuracy: 0.9219\n","Epoch 6/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2050 - accuracy: 0.9418 - val_loss: 0.1780 - val_accuracy: 0.9531\n","Epoch 7/15\n","57/57 [==============================] - 4s 76ms/step - loss: 0.2062 - accuracy: 0.9524 - val_loss: 0.2335 - val_accuracy: 0.9375\n","Epoch 8/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.2116 - accuracy: 0.9242 - val_loss: 0.2251 - val_accuracy: 0.9062\n","Epoch 9/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.2524 - accuracy: 0.9242 - val_loss: 0.1970 - val_accuracy: 0.9219\n","\n","Epoch 00009: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 10/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1679 - accuracy: 0.9506 - val_loss: 0.1832 - val_accuracy: 0.9531\n","Epoch 11/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1647 - accuracy: 0.9541 - val_loss: 0.1518 - val_accuracy: 0.9531\n","Epoch 12/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1533 - accuracy: 0.9577 - val_loss: 0.1741 - val_accuracy: 0.9531\n","\n","Epoch 00012: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 13/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1435 - accuracy: 0.9718 - val_loss: 0.1738 - val_accuracy: 0.9531\n","Epoch 14/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1194 - accuracy: 0.9735 - val_loss: 0.1532 - val_accuracy: 0.9688\n","Epoch 15/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1115 - accuracy: 0.9771 - val_loss: 0.1477 - val_accuracy: 0.9688\n","Epoch 1/10\n","57/57 [==============================] - 20s 228ms/step - loss: 0.2304 - accuracy: 0.9206 - val_loss: 0.1313 - val_accuracy: 0.9375\n","Epoch 2/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1414 - accuracy: 0.9612 - val_loss: 0.0931 - val_accuracy: 0.9844\n","Epoch 3/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0940 - accuracy: 0.9771 - val_loss: 0.0622 - val_accuracy: 1.0000\n","Epoch 4/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1363 - accuracy: 0.9541 - val_loss: 0.1322 - val_accuracy: 0.9531\n","Epoch 5/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1119 - accuracy: 0.9665 - val_loss: 0.0959 - val_accuracy: 0.9844\n","Epoch 6/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0965 - accuracy: 0.9788 - val_loss: 0.1216 - val_accuracy: 0.9844\n","\n","Epoch 00006: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 7/10\n","57/57 [==============================] - 12s 212ms/step - loss: 0.0838 - accuracy: 0.9894 - val_loss: 0.1127 - val_accuracy: 0.9688\n","Epoch 8/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0704 - accuracy: 0.9965 - val_loss: 0.0782 - val_accuracy: 0.9844\n","Epoch 9/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.0742 - accuracy: 0.9912 - val_loss: 0.0820 - val_accuracy: 0.9844\n","\n","Epoch 00009: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","Epoch 10/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0694 - accuracy: 0.9929 - val_loss: 0.0749 - val_accuracy: 0.9844\n","97.14285731315613\n","Epoch 1/15\n","57/57 [==============================] - 10s 93ms/step - loss: 0.5888 - accuracy: 0.7443 - val_loss: 0.5597 - val_accuracy: 0.7188\n","Epoch 2/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.4112 - accuracy: 0.8360 - val_loss: 0.2325 - val_accuracy: 0.9062\n","Epoch 3/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.3144 - accuracy: 0.9012 - val_loss: 0.4284 - val_accuracy: 0.8281\n","Epoch 4/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2598 - accuracy: 0.9101 - val_loss: 0.1944 - val_accuracy: 0.9375\n","Epoch 5/15\n","57/57 [==============================] - 4s 76ms/step - loss: 0.2426 - accuracy: 0.9347 - val_loss: 0.1658 - val_accuracy: 0.9531\n","Epoch 6/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2276 - accuracy: 0.9295 - val_loss: 0.1642 - val_accuracy: 0.9531\n","Epoch 7/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1872 - accuracy: 0.9471 - val_loss: 0.2674 - val_accuracy: 0.8906\n","Epoch 8/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2409 - accuracy: 0.9347 - val_loss: 0.3220 - val_accuracy: 0.9062\n","\n","Epoch 00008: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 9/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1612 - accuracy: 0.9453 - val_loss: 0.2096 - val_accuracy: 0.9531\n","Epoch 10/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1361 - accuracy: 0.9630 - val_loss: 0.2018 - val_accuracy: 0.9531\n","Epoch 11/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1715 - accuracy: 0.9471 - val_loss: 0.1927 - val_accuracy: 0.9531\n","\n","Epoch 00011: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 12/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1642 - accuracy: 0.9524 - val_loss: 0.1888 - val_accuracy: 0.9688\n","Epoch 13/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1294 - accuracy: 0.9771 - val_loss: 0.1840 - val_accuracy: 0.9688\n","Epoch 14/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1538 - accuracy: 0.9630 - val_loss: 0.1742 - val_accuracy: 0.9688\n","Epoch 15/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1485 - accuracy: 0.9577 - val_loss: 0.1767 - val_accuracy: 0.9688\n","\n","Epoch 00015: ReduceLROnPlateau reducing learning rate to 2.700000040931627e-05.\n","Epoch 1/10\n","57/57 [==============================] - 20s 228ms/step - loss: 0.2196 - accuracy: 0.9330 - val_loss: 0.2098 - val_accuracy: 0.9219\n","Epoch 2/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1977 - accuracy: 0.9312 - val_loss: 0.3073 - val_accuracy: 0.8906\n","Epoch 3/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.1401 - accuracy: 0.9630 - val_loss: 0.1149 - val_accuracy: 0.9688\n","Epoch 4/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1131 - accuracy: 0.9718 - val_loss: 0.1819 - val_accuracy: 0.9375\n","Epoch 5/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1217 - accuracy: 0.9735 - val_loss: 0.1234 - val_accuracy: 0.9688\n","Epoch 6/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1572 - accuracy: 0.9594 - val_loss: 0.1610 - val_accuracy: 0.9688\n","\n","Epoch 00006: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 7/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.0850 - accuracy: 0.9824 - val_loss: 0.1341 - val_accuracy: 0.9688\n","Epoch 8/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0842 - accuracy: 0.9841 - val_loss: 0.0842 - val_accuracy: 0.9844\n","Epoch 9/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0876 - accuracy: 0.9859 - val_loss: 0.1192 - val_accuracy: 0.9844\n","Epoch 10/10\n","57/57 [==============================] - 12s 206ms/step - loss: 0.0742 - accuracy: 0.9877 - val_loss: 0.0801 - val_accuracy: 0.9844\n","98.57142567634583\n","Epoch 1/15\n","57/57 [==============================] - 10s 93ms/step - loss: 0.5729 - accuracy: 0.7619 - val_loss: 0.6201 - val_accuracy: 0.6562\n","Epoch 2/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.3671 - accuracy: 0.8554 - val_loss: 0.4380 - val_accuracy: 0.8125\n","Epoch 3/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.3155 - accuracy: 0.8836 - val_loss: 0.2866 - val_accuracy: 0.8906\n","Epoch 4/15\n","57/57 [==============================] - 4s 77ms/step - loss: 0.2554 - accuracy: 0.9153 - val_loss: 0.2103 - val_accuracy: 0.9375\n","Epoch 5/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.2543 - accuracy: 0.9153 - val_loss: 0.2648 - val_accuracy: 0.9219\n","Epoch 6/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2686 - accuracy: 0.8959 - val_loss: 0.2855 - val_accuracy: 0.9219\n","Epoch 7/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1846 - accuracy: 0.9436 - val_loss: 0.2603 - val_accuracy: 0.9219\n","\n","Epoch 00007: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 8/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2042 - accuracy: 0.9259 - val_loss: 0.1939 - val_accuracy: 0.9531\n","Epoch 9/15\n","57/57 [==============================] - 4s 77ms/step - loss: 0.1588 - accuracy: 0.9559 - val_loss: 0.1677 - val_accuracy: 0.9531\n","Epoch 10/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1601 - accuracy: 0.9665 - val_loss: 0.1684 - val_accuracy: 0.9531\n","Epoch 11/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1583 - accuracy: 0.9541 - val_loss: 0.1565 - val_accuracy: 0.9688\n","Epoch 12/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1687 - accuracy: 0.9471 - val_loss: 0.1957 - val_accuracy: 0.9375\n","Epoch 13/15\n","57/57 [==============================] - 4s 77ms/step - loss: 0.1419 - accuracy: 0.9594 - val_loss: 0.1634 - val_accuracy: 0.9688\n","Epoch 14/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1349 - accuracy: 0.9647 - val_loss: 0.1714 - val_accuracy: 0.9688\n","\n","Epoch 00014: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 15/15\n","57/57 [==============================] - 4s 71ms/step - loss: 0.1397 - accuracy: 0.9700 - val_loss: 0.1695 - val_accuracy: 0.9688\n","Epoch 1/10\n","57/57 [==============================] - 20s 233ms/step - loss: 0.2030 - accuracy: 0.9383 - val_loss: 0.2586 - val_accuracy: 0.8906\n","Epoch 2/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1336 - accuracy: 0.9647 - val_loss: 0.2173 - val_accuracy: 0.9375\n","Epoch 3/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.2086 - accuracy: 0.9189 - val_loss: 0.1272 - val_accuracy: 0.9531\n","Epoch 4/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1353 - accuracy: 0.9630 - val_loss: 0.1432 - val_accuracy: 0.9531\n","Epoch 5/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1239 - accuracy: 0.9700 - val_loss: 0.2404 - val_accuracy: 0.9219\n","Epoch 6/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1294 - accuracy: 0.9559 - val_loss: 0.1302 - val_accuracy: 0.9844\n","Epoch 7/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1562 - accuracy: 0.9506 - val_loss: 0.1178 - val_accuracy: 0.9688\n","Epoch 8/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0837 - accuracy: 0.9841 - val_loss: 0.0788 - val_accuracy: 0.9844\n","Epoch 9/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0777 - accuracy: 0.9894 - val_loss: 0.0539 - val_accuracy: 1.0000\n","Epoch 10/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0858 - accuracy: 0.9806 - val_loss: 0.1841 - val_accuracy: 0.9375\n","100.0\n","Epoch 1/15\n","57/57 [==============================] - 9s 95ms/step - loss: 0.5310 - accuracy: 0.7566 - val_loss: 0.4909 - val_accuracy: 0.7812\n","Epoch 2/15\n","57/57 [==============================] - 4s 77ms/step - loss: 0.3967 - accuracy: 0.8483 - val_loss: 0.2665 - val_accuracy: 0.9219\n","Epoch 3/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.3182 - accuracy: 0.8818 - val_loss: 0.2601 - val_accuracy: 0.8750\n","Epoch 4/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2774 - accuracy: 0.9083 - val_loss: 0.2490 - val_accuracy: 0.9375\n","Epoch 5/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2347 - accuracy: 0.9242 - val_loss: 0.2368 - val_accuracy: 0.9062\n","Epoch 6/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2017 - accuracy: 0.9330 - val_loss: 0.2416 - val_accuracy: 0.9375\n","Epoch 7/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2061 - accuracy: 0.9312 - val_loss: 0.2207 - val_accuracy: 0.9531\n","Epoch 8/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2120 - accuracy: 0.9330 - val_loss: 0.1335 - val_accuracy: 0.9844\n","Epoch 9/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1617 - accuracy: 0.9524 - val_loss: 0.1828 - val_accuracy: 0.9219\n","Epoch 10/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1937 - accuracy: 0.9436 - val_loss: 0.1514 - val_accuracy: 0.9531\n","Epoch 11/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2363 - accuracy: 0.9259 - val_loss: 0.1855 - val_accuracy: 0.9219\n","\n","Epoch 00011: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 12/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1429 - accuracy: 0.9683 - val_loss: 0.1159 - val_accuracy: 0.9844\n","Epoch 13/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1318 - accuracy: 0.9665 - val_loss: 0.1104 - val_accuracy: 0.9688\n","Epoch 14/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1556 - accuracy: 0.9647 - val_loss: 0.1120 - val_accuracy: 0.9688\n","\n","Epoch 00014: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 15/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1328 - accuracy: 0.9612 - val_loss: 0.0983 - val_accuracy: 0.9844\n","Epoch 1/10\n","57/57 [==============================] - 20s 229ms/step - loss: 0.1932 - accuracy: 0.9295 - val_loss: 0.0821 - val_accuracy: 0.9688\n","Epoch 2/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.2011 - accuracy: 0.9347 - val_loss: 0.0698 - val_accuracy: 1.0000\n","Epoch 3/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.1710 - accuracy: 0.9489 - val_loss: 0.1595 - val_accuracy: 0.9375\n","Epoch 4/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1090 - accuracy: 0.9735 - val_loss: 0.1155 - val_accuracy: 0.9531\n","Epoch 5/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1243 - accuracy: 0.9718 - val_loss: 0.0924 - val_accuracy: 0.9688\n","\n","Epoch 00005: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 6/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.1402 - accuracy: 0.9647 - val_loss: 0.0485 - val_accuracy: 1.0000\n","Epoch 7/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1010 - accuracy: 0.9806 - val_loss: 0.0444 - val_accuracy: 1.0000\n","Epoch 8/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0867 - accuracy: 0.9824 - val_loss: 0.0509 - val_accuracy: 1.0000\n","\n","Epoch 00008: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","Epoch 9/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0612 - accuracy: 0.9947 - val_loss: 0.0444 - val_accuracy: 1.0000\n","Epoch 10/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0669 - accuracy: 0.9894 - val_loss: 0.0412 - val_accuracy: 1.0000\n","100.0\n","Epoch 1/15\n","57/57 [==============================] - 10s 95ms/step - loss: 0.5974 - accuracy: 0.7372 - val_loss: 0.4769 - val_accuracy: 0.7656\n","Epoch 2/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.3679 - accuracy: 0.8483 - val_loss: 0.3629 - val_accuracy: 0.8906\n","Epoch 3/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2996 - accuracy: 0.8977 - val_loss: 0.2595 - val_accuracy: 0.9062\n","Epoch 4/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2639 - accuracy: 0.9153 - val_loss: 0.2372 - val_accuracy: 0.9688\n","Epoch 5/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2572 - accuracy: 0.9065 - val_loss: 0.3072 - val_accuracy: 0.8750\n","Epoch 6/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2318 - accuracy: 0.9189 - val_loss: 0.3672 - val_accuracy: 0.9062\n","Epoch 7/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2250 - accuracy: 0.9189 - val_loss: 0.2510 - val_accuracy: 0.9219\n","\n","Epoch 00007: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 8/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1783 - accuracy: 0.9506 - val_loss: 0.2235 - val_accuracy: 0.9375\n","Epoch 9/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1440 - accuracy: 0.9665 - val_loss: 0.1926 - val_accuracy: 0.9688\n","Epoch 10/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1350 - accuracy: 0.9612 - val_loss: 0.2047 - val_accuracy: 0.9375\n","\n","Epoch 00010: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 11/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1293 - accuracy: 0.9735 - val_loss: 0.2074 - val_accuracy: 0.9531\n","Epoch 12/15\n","57/57 [==============================] - 4s 78ms/step - loss: 0.1388 - accuracy: 0.9700 - val_loss: 0.1833 - val_accuracy: 0.9688\n","Epoch 13/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1372 - accuracy: 0.9630 - val_loss: 0.1963 - val_accuracy: 0.9688\n","\n","Epoch 00013: ReduceLROnPlateau reducing learning rate to 2.700000040931627e-05.\n","Epoch 14/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1121 - accuracy: 0.9806 - val_loss: 0.1949 - val_accuracy: 0.9688\n","Epoch 15/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1464 - accuracy: 0.9524 - val_loss: 0.1974 - val_accuracy: 0.9688\n","Epoch 1/10\n","57/57 [==============================] - 20s 230ms/step - loss: 0.2392 - accuracy: 0.9136 - val_loss: 0.3962 - val_accuracy: 0.8594\n","Epoch 2/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1667 - accuracy: 0.9436 - val_loss: 0.2404 - val_accuracy: 0.9531\n","Epoch 3/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1383 - accuracy: 0.9577 - val_loss: 0.1971 - val_accuracy: 0.9531\n","Epoch 4/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1291 - accuracy: 0.9630 - val_loss: 0.1520 - val_accuracy: 0.9844\n","Epoch 5/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.1324 - accuracy: 0.9577 - val_loss: 0.2147 - val_accuracy: 0.9531\n","Epoch 6/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1101 - accuracy: 0.9806 - val_loss: 0.1316 - val_accuracy: 0.9844\n","Epoch 7/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.1034 - accuracy: 0.9753 - val_loss: 0.1727 - val_accuracy: 0.9688\n","\n","Epoch 00007: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 8/10\n","57/57 [==============================] - 12s 213ms/step - loss: 0.0980 - accuracy: 0.9788 - val_loss: 0.1414 - val_accuracy: 0.9844\n","Epoch 9/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0596 - accuracy: 0.9965 - val_loss: 0.1712 - val_accuracy: 0.9844\n","Epoch 10/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0650 - accuracy: 0.9912 - val_loss: 0.1548 - val_accuracy: 0.9844\n","\n","Epoch 00010: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","97.14285731315613\n","Epoch 1/15\n","57/57 [==============================] - 10s 95ms/step - loss: 0.5506 - accuracy: 0.7513 - val_loss: 0.9832 - val_accuracy: 0.5938\n","Epoch 2/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.3431 - accuracy: 0.8730 - val_loss: 0.4831 - val_accuracy: 0.8125\n","Epoch 3/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.3210 - accuracy: 0.8836 - val_loss: 0.3176 - val_accuracy: 0.8750\n","Epoch 4/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2962 - accuracy: 0.9012 - val_loss: 0.2461 - val_accuracy: 0.9062\n","Epoch 5/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2201 - accuracy: 0.9312 - val_loss: 0.2654 - val_accuracy: 0.9219\n","Epoch 6/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.2592 - accuracy: 0.9189 - val_loss: 0.2823 - val_accuracy: 0.9062\n","Epoch 7/15\n","57/57 [==============================] - 4s 78ms/step - loss: 0.1878 - accuracy: 0.9541 - val_loss: 0.2574 - val_accuracy: 0.9219\n","Epoch 8/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2294 - accuracy: 0.9153 - val_loss: 0.2540 - val_accuracy: 0.9062\n","\n","Epoch 00008: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 9/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1658 - accuracy: 0.9594 - val_loss: 0.1868 - val_accuracy: 0.9375\n","Epoch 10/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.1290 - accuracy: 0.9665 - val_loss: 0.1903 - val_accuracy: 0.9531\n","Epoch 11/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1584 - accuracy: 0.9541 - val_loss: 0.1923 - val_accuracy: 0.9062\n","Epoch 12/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1302 - accuracy: 0.9647 - val_loss: 0.1726 - val_accuracy: 0.9375\n","Epoch 13/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1529 - accuracy: 0.9612 - val_loss: 0.1811 - val_accuracy: 0.9375\n","\n","Epoch 00013: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 14/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1249 - accuracy: 0.9718 - val_loss: 0.1648 - val_accuracy: 0.9219\n","Epoch 15/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1437 - accuracy: 0.9647 - val_loss: 0.1639 - val_accuracy: 0.9375\n","Epoch 1/10\n","57/57 [==============================] - 20s 230ms/step - loss: 0.2238 - accuracy: 0.9171 - val_loss: 0.1560 - val_accuracy: 0.9531\n","Epoch 2/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1661 - accuracy: 0.9524 - val_loss: 0.2035 - val_accuracy: 0.9688\n","Epoch 3/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.1271 - accuracy: 0.9630 - val_loss: 0.1630 - val_accuracy: 0.9844\n","Epoch 4/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1598 - accuracy: 0.9506 - val_loss: 0.1108 - val_accuracy: 0.9844\n","Epoch 5/10\n","57/57 [==============================] - 12s 212ms/step - loss: 0.0961 - accuracy: 0.9788 - val_loss: 0.1579 - val_accuracy: 0.9844\n","Epoch 6/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0985 - accuracy: 0.9806 - val_loss: 0.2676 - val_accuracy: 0.9062\n","\n","Epoch 00006: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 7/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0825 - accuracy: 0.9806 - val_loss: 0.1209 - val_accuracy: 0.9531\n","Epoch 8/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.0664 - accuracy: 0.9947 - val_loss: 0.1086 - val_accuracy: 0.9844\n","Epoch 9/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0715 - accuracy: 0.9894 - val_loss: 0.1394 - val_accuracy: 0.9688\n","\n","Epoch 00009: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","Epoch 10/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0684 - accuracy: 0.9947 - val_loss: 0.1268 - val_accuracy: 0.9844\n","98.57142567634583\n","Epoch 1/15\n","57/57 [==============================] - 10s 94ms/step - loss: 0.5821 - accuracy: 0.7354 - val_loss: 0.7119 - val_accuracy: 0.6562\n","Epoch 2/15\n","57/57 [==============================] - 4s 72ms/step - loss: 0.3875 - accuracy: 0.8554 - val_loss: 0.4304 - val_accuracy: 0.7656\n","Epoch 3/15\n","57/57 [==============================] - 4s 78ms/step - loss: 0.3253 - accuracy: 0.8765 - val_loss: 0.1993 - val_accuracy: 0.9219\n","Epoch 4/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2708 - accuracy: 0.9224 - val_loss: 0.2299 - val_accuracy: 0.9219\n","Epoch 5/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2477 - accuracy: 0.9224 - val_loss: 0.2164 - val_accuracy: 0.9062\n","Epoch 6/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2277 - accuracy: 0.9259 - val_loss: 0.2040 - val_accuracy: 0.9219\n","\n","Epoch 00006: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 7/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1819 - accuracy: 0.9489 - val_loss: 0.2019 - val_accuracy: 0.9219\n","Epoch 8/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.1433 - accuracy: 0.9718 - val_loss: 0.1644 - val_accuracy: 0.9375\n","Epoch 9/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1856 - accuracy: 0.9365 - val_loss: 0.2000 - val_accuracy: 0.9688\n","Epoch 10/15\n","57/57 [==============================] - 4s 79ms/step - loss: 0.1651 - accuracy: 0.9418 - val_loss: 0.1573 - val_accuracy: 0.9688\n","Epoch 11/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.1548 - accuracy: 0.9541 - val_loss: 0.2149 - val_accuracy: 0.9219\n","Epoch 12/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1935 - accuracy: 0.9418 - val_loss: 0.1580 - val_accuracy: 0.9531\n","\n","Epoch 00012: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 13/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1109 - accuracy: 0.9735 - val_loss: 0.1436 - val_accuracy: 0.9688\n","Epoch 14/15\n","57/57 [==============================] - 4s 78ms/step - loss: 0.1468 - accuracy: 0.9665 - val_loss: 0.1383 - val_accuracy: 0.9844\n","Epoch 15/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1301 - accuracy: 0.9753 - val_loss: 0.1368 - val_accuracy: 0.9688\n","Epoch 1/10\n","57/57 [==============================] - 20s 234ms/step - loss: 0.2048 - accuracy: 0.9365 - val_loss: 0.1706 - val_accuracy: 0.9219\n","Epoch 2/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1715 - accuracy: 0.9559 - val_loss: 0.0988 - val_accuracy: 0.9844\n","Epoch 3/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1126 - accuracy: 0.9806 - val_loss: 0.1033 - val_accuracy: 0.9688\n","Epoch 4/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1844 - accuracy: 0.9559 - val_loss: 0.1064 - val_accuracy: 0.9688\n","Epoch 5/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1208 - accuracy: 0.9718 - val_loss: 0.1080 - val_accuracy: 0.9688\n","\n","Epoch 00005: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 6/10\n","57/57 [==============================] - 12s 207ms/step - loss: 0.0781 - accuracy: 0.9947 - val_loss: 0.1365 - val_accuracy: 0.9844\n","Epoch 7/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0748 - accuracy: 0.9912 - val_loss: 0.1312 - val_accuracy: 0.9844\n","Epoch 8/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0725 - accuracy: 0.9912 - val_loss: 0.1541 - val_accuracy: 0.9844\n","\n","Epoch 00008: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","Epoch 9/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.0994 - accuracy: 0.9824 - val_loss: 0.1424 - val_accuracy: 0.9844\n","Epoch 10/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0676 - accuracy: 0.9965 - val_loss: 0.1403 - val_accuracy: 0.9844\n","98.57142567634583\n","Epoch 1/15\n","57/57 [==============================] - 9s 95ms/step - loss: 0.5833 - accuracy: 0.7390 - val_loss: 0.4374 - val_accuracy: 0.8438\n","Epoch 2/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.3722 - accuracy: 0.8501 - val_loss: 0.3426 - val_accuracy: 0.8750\n","Epoch 3/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2889 - accuracy: 0.9012 - val_loss: 0.2648 - val_accuracy: 0.9219\n","Epoch 4/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.2961 - accuracy: 0.8889 - val_loss: 0.2906 - val_accuracy: 0.8750\n","Epoch 5/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2666 - accuracy: 0.9065 - val_loss: 0.3517 - val_accuracy: 0.8906\n","Epoch 6/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.2213 - accuracy: 0.9259 - val_loss: 0.4098 - val_accuracy: 0.8438\n","\n","Epoch 00006: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 7/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1641 - accuracy: 0.9559 - val_loss: 0.2811 - val_accuracy: 0.9062\n","Epoch 8/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1542 - accuracy: 0.9541 - val_loss: 0.2810 - val_accuracy: 0.9062\n","Epoch 9/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1724 - accuracy: 0.9489 - val_loss: 0.2277 - val_accuracy: 0.8906\n","\n","Epoch 00009: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 10/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1711 - accuracy: 0.9541 - val_loss: 0.2175 - val_accuracy: 0.9062\n","Epoch 11/15\n","57/57 [==============================] - 4s 78ms/step - loss: 0.1481 - accuracy: 0.9665 - val_loss: 0.2194 - val_accuracy: 0.9219\n","Epoch 12/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.1514 - accuracy: 0.9630 - val_loss: 0.2129 - val_accuracy: 0.9531\n","Epoch 13/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1612 - accuracy: 0.9577 - val_loss: 0.2178 - val_accuracy: 0.9375\n","Epoch 14/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1217 - accuracy: 0.9788 - val_loss: 0.2087 - val_accuracy: 0.9219\n","Epoch 15/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.1198 - accuracy: 0.9771 - val_loss: 0.2118 - val_accuracy: 0.9219\n","\n","Epoch 00015: ReduceLROnPlateau reducing learning rate to 2.700000040931627e-05.\n","Epoch 1/10\n","57/57 [==============================] - 20s 231ms/step - loss: 0.2188 - accuracy: 0.9347 - val_loss: 0.1843 - val_accuracy: 0.9219\n","Epoch 2/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.2206 - accuracy: 0.9330 - val_loss: 0.2103 - val_accuracy: 0.9531\n","Epoch 3/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.1419 - accuracy: 0.9612 - val_loss: 0.2823 - val_accuracy: 0.9688\n","Epoch 4/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.1148 - accuracy: 0.9771 - val_loss: 0.1630 - val_accuracy: 0.9688\n","Epoch 5/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.1035 - accuracy: 0.9788 - val_loss: 0.1717 - val_accuracy: 0.9688\n","Epoch 6/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.1151 - accuracy: 0.9683 - val_loss: 0.1462 - val_accuracy: 0.9688\n","\n","Epoch 00006: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 7/10\n","57/57 [==============================] - 12s 213ms/step - loss: 0.1358 - accuracy: 0.9594 - val_loss: 0.1190 - val_accuracy: 0.9844\n","Epoch 8/10\n","57/57 [==============================] - 12s 208ms/step - loss: 0.0830 - accuracy: 0.9894 - val_loss: 0.1167 - val_accuracy: 0.9844\n","Epoch 9/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.0779 - accuracy: 0.9877 - val_loss: 0.1065 - val_accuracy: 0.9844\n","Epoch 10/10\n","57/57 [==============================] - 12s 214ms/step - loss: 0.0749 - accuracy: 0.9859 - val_loss: 0.1200 - val_accuracy: 0.9844\n","\n","Epoch 00010: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","100.0\n","Epoch 1/15\n","57/57 [==============================] - 10s 95ms/step - loss: 0.6266 - accuracy: 0.7249 - val_loss: 0.8687 - val_accuracy: 0.5938\n","Epoch 2/15\n","57/57 [==============================] - 4s 75ms/step - loss: 0.4372 - accuracy: 0.8307 - val_loss: 0.2843 - val_accuracy: 0.9219\n","Epoch 3/15\n","57/57 [==============================] - 4s 75ms/step - loss: 0.3264 - accuracy: 0.8854 - val_loss: 0.4548 - val_accuracy: 0.8125\n","Epoch 4/15\n","57/57 [==============================] - 4s 75ms/step - loss: 0.2791 - accuracy: 0.8942 - val_loss: 0.3419 - val_accuracy: 0.8750\n","Epoch 5/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.2680 - accuracy: 0.9030 - val_loss: 0.2814 - val_accuracy: 0.8906\n","\n","Epoch 00005: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","Epoch 6/15\n","57/57 [==============================] - 4s 73ms/step - loss: 0.2054 - accuracy: 0.9330 - val_loss: 0.1385 - val_accuracy: 0.9844\n","Epoch 7/15\n","57/57 [==============================] - 4s 79ms/step - loss: 0.1923 - accuracy: 0.9506 - val_loss: 0.1526 - val_accuracy: 0.9688\n","Epoch 8/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.1889 - accuracy: 0.9489 - val_loss: 0.1519 - val_accuracy: 0.9531\n","Epoch 9/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.1641 - accuracy: 0.9559 - val_loss: 0.1664 - val_accuracy: 0.9375\n","\n","Epoch 00009: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","Epoch 10/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.1542 - accuracy: 0.9612 - val_loss: 0.1434 - val_accuracy: 0.9688\n","Epoch 11/15\n","57/57 [==============================] - 4s 75ms/step - loss: 0.1496 - accuracy: 0.9665 - val_loss: 0.1333 - val_accuracy: 0.9688\n","Epoch 12/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.1474 - accuracy: 0.9612 - val_loss: 0.1286 - val_accuracy: 0.9688\n","\n","Epoch 00012: ReduceLROnPlateau reducing learning rate to 2.700000040931627e-05.\n","Epoch 13/15\n","57/57 [==============================] - 5s 80ms/step - loss: 0.1414 - accuracy: 0.9665 - val_loss: 0.1275 - val_accuracy: 0.9688\n","Epoch 14/15\n","57/57 [==============================] - 4s 75ms/step - loss: 0.1502 - accuracy: 0.9594 - val_loss: 0.1263 - val_accuracy: 0.9688\n","Epoch 15/15\n","57/57 [==============================] - 4s 74ms/step - loss: 0.1515 - accuracy: 0.9594 - val_loss: 0.1252 - val_accuracy: 0.9688\n","\n","Epoch 00015: ReduceLROnPlateau reducing learning rate to 8.100000013655517e-06.\n","Epoch 1/10\n","57/57 [==============================] - 20s 231ms/step - loss: 0.2088 - accuracy: 0.9295 - val_loss: 0.1118 - val_accuracy: 0.9844\n","Epoch 2/10\n","57/57 [==============================] - 12s 210ms/step - loss: 0.1524 - accuracy: 0.9524 - val_loss: 0.0798 - val_accuracy: 1.0000\n","Epoch 3/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.2226 - accuracy: 0.9365 - val_loss: 0.0934 - val_accuracy: 0.9844\n","Epoch 4/10\n","57/57 [==============================] - 12s 214ms/step - loss: 0.1463 - accuracy: 0.9594 - val_loss: 0.0772 - val_accuracy: 1.0000\n","Epoch 5/10\n","57/57 [==============================] - 12s 210ms/step - loss: 0.1173 - accuracy: 0.9683 - val_loss: 0.2718 - val_accuracy: 0.9219\n","\n","Epoch 00005: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","Epoch 6/10\n","57/57 [==============================] - 12s 210ms/step - loss: 0.1103 - accuracy: 0.9788 - val_loss: 0.0543 - val_accuracy: 1.0000\n","Epoch 7/10\n","57/57 [==============================] - 12s 210ms/step - loss: 0.0790 - accuracy: 0.9877 - val_loss: 0.0575 - val_accuracy: 1.0000\n","Epoch 8/10\n","57/57 [==============================] - 12s 209ms/step - loss: 0.0875 - accuracy: 0.9859 - val_loss: 0.0524 - val_accuracy: 1.0000\n","\n","Epoch 00008: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","Epoch 9/10\n","57/57 [==============================] - 12s 211ms/step - loss: 0.0808 - accuracy: 0.9877 - val_loss: 0.0536 - val_accuracy: 1.0000\n","Epoch 10/10\n","57/57 [==============================] - 12s 210ms/step - loss: 0.0767 - accuracy: 0.9912 - val_loss: 0.0486 - val_accuracy: 1.0000\n","97.14285731315613\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CUsHoqWLMKGf","executionInfo":{"status":"ok","timestamp":1634608381191,"user_tz":300,"elapsed":536,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"ee73fc18-8c19-49b2-dbb2-ff16de138f5a"},"source":["print(np.mean(cvscores))\n","print(np.std(cvscores))"],"id":"CUsHoqWLMKGf","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["98.57343971729279\n","1.106583067467519\n"]}]},{"cell_type":"markdown","source":["## Model Training"],"metadata":{"id":"qNOrhpZTk4pb"},"id":"qNOrhpZTk4pb"},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NVn3gsmGf4s3","executionInfo":{"status":"ok","timestamp":1634406573580,"user_tz":300,"elapsed":3400,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"8231d974-bb1c-443d-c1c7-a8b03453d45c"},"source":["base_model = keras.applications.ResNet50(weights='imagenet',include_top=False,input_shape=(150,150,3))\n","base_model.trainable=False\n","inputs = keras.Input(shape=(150, 150, 3))\n","data_augmentation = keras.Sequential(\n","    [layers.RandomFlip(\"horizontal\"), layers.RandomRotation(0.1),]\n",")\n","x = data_augmentation(inputs) \n","x = base_model(x, training=False)\n","x = keras.layers.Conv2D(512, (1, 1), strides=(2,2),\n","                      kernel_initializer='he_normal',\n","                      name='conv6_block1_1_conv')(x)\n","x = layers.BatchNormalization(axis=3, name='conv6_block1_1_bn')(x)\n","x = layers.Activation('relu',name='conv6_block1_1_relu')(x)\n","x = keras.layers.GlobalAveragePooling2D()(x)\n","outputs = keras.layers.Dense(2,activation='softmax',kernel_regularizer='l2')(x)\n","model = keras.Model(inputs, outputs)\n","model.summary()\n","model.compile(loss='categorical_crossentropy',optimizer = 'Adam', metrics= ['accuracy'])\n","checkpoint = ModelCheckpoint('RESNET50CortezaFreezingDeeper.h5',monitor=\"val_accuracy\",save_best_only=True,mode=\"auto\",verbose=1)\n","reduce_lr = ReduceLROnPlateau(monitor = 'val_accuracy', factor = 0.3, patience = 3, min_delta = 0.001,\n","                              mode='auto',verbose=1)"],"id":"NVn3gsmGf4s3","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94773248/94765736 [==============================] - 1s 0us/step\n","94781440/94765736 [==============================] - 1s 0us/step\n","Model: \"model\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_2 (InputLayer)         [(None, 150, 150, 3)]     0         \n","_________________________________________________________________\n","sequential (Sequential)      (None, 150, 150, 3)       0         \n","_________________________________________________________________\n","resnet50 (Functional)        (None, 5, 5, 2048)        23587712  \n","_________________________________________________________________\n","conv6_block1_1_conv (Conv2D) (None, 3, 3, 512)         1049088   \n","_________________________________________________________________\n","conv6_block1_1_bn (BatchNorm (None, 3, 3, 512)         2048      \n","_________________________________________________________________\n","conv6_block1_1_relu (Activat (None, 3, 3, 512)         0         \n","_________________________________________________________________\n","global_average_pooling2d (Gl (None, 512)               0         \n","_________________________________________________________________\n","dense (Dense)                (None, 2)                 1026      \n","=================================================================\n","Total params: 24,639,874\n","Trainable params: 1,051,138\n","Non-trainable params: 23,588,736\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dRRE6sqsOV1i","executionInfo":{"status":"ok","timestamp":1634407379111,"user_tz":300,"elapsed":745955,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"d1c01e9b-bbca-4553-9a32-637667e9df46"},"source":["history = model.fit(X_train,y_train,validation_split=0.1, epochs = 15, verbose=1, batch_size=10,\n","                   callbacks=[reduce_lr,checkpoint])"],"id":"dRRE6sqsOV1i","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/15\n","57/57 [==============================] - 51s 829ms/step - loss: 0.5452 - accuracy: 0.7672 - val_loss: 0.9370 - val_accuracy: 0.7460\n","\n","Epoch 00001: val_accuracy improved from -inf to 0.74603, saving model to RESNET50CortezaFreezingDeeper.h5\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py:497: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.\n","  category=CustomMaskWarning)\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 2/15\n","57/57 [==============================] - 47s 821ms/step - loss: 0.3618 - accuracy: 0.8695 - val_loss: 0.1918 - val_accuracy: 0.9524\n","\n","Epoch 00002: val_accuracy improved from 0.74603 to 0.95238, saving model to RESNET50CortezaFreezingDeeper.h5\n","Epoch 3/15\n","57/57 [==============================] - 46s 813ms/step - loss: 0.2957 - accuracy: 0.8907 - val_loss: 0.2940 - val_accuracy: 0.8889\n","\n","Epoch 00003: val_accuracy did not improve from 0.95238\n","Epoch 4/15\n","57/57 [==============================] - 46s 812ms/step - loss: 0.2612 - accuracy: 0.9065 - val_loss: 0.1217 - val_accuracy: 0.9841\n","\n","Epoch 00004: val_accuracy improved from 0.95238 to 0.98413, saving model to RESNET50CortezaFreezingDeeper.h5\n","Epoch 5/15\n","57/57 [==============================] - 47s 818ms/step - loss: 0.2652 - accuracy: 0.8942 - val_loss: 0.1826 - val_accuracy: 0.9365\n","\n","Epoch 00005: val_accuracy did not improve from 0.98413\n","Epoch 6/15\n","57/57 [==============================] - 46s 811ms/step - loss: 0.2372 - accuracy: 0.9171 - val_loss: 0.2069 - val_accuracy: 0.9365\n","\n","Epoch 00006: val_accuracy did not improve from 0.98413\n","Epoch 7/15\n","57/57 [==============================] - 46s 817ms/step - loss: 0.2217 - accuracy: 0.9242 - val_loss: 0.1807 - val_accuracy: 0.9365\n","\n","Epoch 00007: ReduceLROnPlateau reducing learning rate to 0.0003000000142492354.\n","\n","Epoch 00007: val_accuracy did not improve from 0.98413\n","Epoch 8/15\n","57/57 [==============================] - 47s 818ms/step - loss: 0.1688 - accuracy: 0.9506 - val_loss: 0.1206 - val_accuracy: 0.9683\n","\n","Epoch 00008: val_accuracy did not improve from 0.98413\n","Epoch 9/15\n","57/57 [==============================] - 46s 815ms/step - loss: 0.1488 - accuracy: 0.9630 - val_loss: 0.1149 - val_accuracy: 0.9683\n","\n","Epoch 00009: val_accuracy did not improve from 0.98413\n","Epoch 10/15\n","57/57 [==============================] - 47s 820ms/step - loss: 0.1293 - accuracy: 0.9683 - val_loss: 0.1396 - val_accuracy: 0.9524\n","\n","Epoch 00010: ReduceLROnPlateau reducing learning rate to 9.000000427477062e-05.\n","\n","Epoch 00010: val_accuracy did not improve from 0.98413\n","Epoch 11/15\n","57/57 [==============================] - 46s 815ms/step - loss: 0.1239 - accuracy: 0.9683 - val_loss: 0.1015 - val_accuracy: 0.9841\n","\n","Epoch 00011: val_accuracy did not improve from 0.98413\n","Epoch 12/15\n","57/57 [==============================] - 46s 811ms/step - loss: 0.1288 - accuracy: 0.9735 - val_loss: 0.1051 - val_accuracy: 0.9841\n","\n","Epoch 00012: val_accuracy did not improve from 0.98413\n","Epoch 13/15\n","57/57 [==============================] - 46s 815ms/step - loss: 0.1158 - accuracy: 0.9753 - val_loss: 0.1009 - val_accuracy: 0.9841\n","\n","Epoch 00013: ReduceLROnPlateau reducing learning rate to 2.700000040931627e-05.\n","\n","Epoch 00013: val_accuracy did not improve from 0.98413\n","Epoch 14/15\n","57/57 [==============================] - 46s 810ms/step - loss: 0.1319 - accuracy: 0.9612 - val_loss: 0.1009 - val_accuracy: 0.9841\n","\n","Epoch 00014: val_accuracy did not improve from 0.98413\n","Epoch 15/15\n","57/57 [==============================] - 46s 815ms/step - loss: 0.1382 - accuracy: 0.9665 - val_loss: 0.1026 - val_accuracy: 0.9683\n","\n","Epoch 00015: val_accuracy did not improve from 0.98413\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v8ADgxLfRQ2J","executionInfo":{"status":"ok","timestamp":1634407425522,"user_tz":300,"elapsed":216,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"4421bea5-9072-4a2b-f93e-6f2d1a6fc76e"},"source":["base_model.trainable=True\n","model.summary()\n","model.compile(loss='categorical_crossentropy',optimizer=keras.optimizers.Adam(1e-5), metrics= ['accuracy'])"],"id":"v8ADgxLfRQ2J","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_2 (InputLayer)         [(None, 150, 150, 3)]     0         \n","_________________________________________________________________\n","sequential (Sequential)      (None, 150, 150, 3)       0         \n","_________________________________________________________________\n","resnet50 (Functional)        (None, 5, 5, 2048)        23587712  \n","_________________________________________________________________\n","conv6_block1_1_conv (Conv2D) (None, 3, 3, 512)         1049088   \n","_________________________________________________________________\n","conv6_block1_1_bn (BatchNorm (None, 3, 3, 512)         2048      \n","_________________________________________________________________\n","conv6_block1_1_relu (Activat (None, 3, 3, 512)         0         \n","_________________________________________________________________\n","global_average_pooling2d (Gl (None, 512)               0         \n","_________________________________________________________________\n","dense (Dense)                (None, 2)                 1026      \n","=================================================================\n","Total params: 24,639,874\n","Trainable params: 24,585,730\n","Non-trainable params: 54,144\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4QUv1wBURkW1","executionInfo":{"status":"ok","timestamp":1634409321357,"user_tz":300,"elapsed":1827944,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"677ca472-5af5-4f37-f0ef-532d6369752b"},"source":["historynew = model.fit(X_train,y_train,validation_split=0.1, epochs = 10, verbose=1, batch_size=10,\n","                   callbacks=[reduce_lr,checkpoint])"],"id":"4QUv1wBURkW1","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","57/57 [==============================] - 183s 3s/step - loss: 0.2101 - accuracy: 0.9436 - val_loss: 0.1191 - val_accuracy: 0.9524\n","\n","Epoch 00001: val_accuracy did not improve from 0.98413\n","Epoch 2/10\n","57/57 [==============================] - 178s 3s/step - loss: 0.1987 - accuracy: 0.9295 - val_loss: 0.1194 - val_accuracy: 0.9524\n","\n","Epoch 00002: val_accuracy did not improve from 0.98413\n","Epoch 3/10\n","57/57 [==============================] - 176s 3s/step - loss: 0.1642 - accuracy: 0.9489 - val_loss: 0.0589 - val_accuracy: 1.0000\n","\n","Epoch 00003: val_accuracy improved from 0.98413 to 1.00000, saving model to RESNET50CortezaFreezingDeeper.h5\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py:497: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.\n","  category=CustomMaskWarning)\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 4/10\n","57/57 [==============================] - 177s 3s/step - loss: 0.1446 - accuracy: 0.9559 - val_loss: 0.0934 - val_accuracy: 0.9841\n","\n","Epoch 00004: val_accuracy did not improve from 1.00000\n","Epoch 5/10\n","57/57 [==============================] - 179s 3s/step - loss: 0.1443 - accuracy: 0.9577 - val_loss: 0.0816 - val_accuracy: 1.0000\n","\n","Epoch 00005: val_accuracy did not improve from 1.00000\n","Epoch 6/10\n","57/57 [==============================] - 176s 3s/step - loss: 0.1055 - accuracy: 0.9753 - val_loss: 0.0461 - val_accuracy: 1.0000\n","\n","Epoch 00006: ReduceLROnPlateau reducing learning rate to 2.9999999242136253e-06.\n","\n","Epoch 00006: val_accuracy did not improve from 1.00000\n","Epoch 7/10\n","57/57 [==============================] - 176s 3s/step - loss: 0.0840 - accuracy: 0.9877 - val_loss: 0.0574 - val_accuracy: 1.0000\n","\n","Epoch 00007: val_accuracy did not improve from 1.00000\n","Epoch 8/10\n","57/57 [==============================] - 177s 3s/step - loss: 0.0776 - accuracy: 0.9877 - val_loss: 0.0469 - val_accuracy: 1.0000\n","\n","Epoch 00008: val_accuracy did not improve from 1.00000\n","Epoch 9/10\n","57/57 [==============================] - 176s 3s/step - loss: 0.0695 - accuracy: 0.9877 - val_loss: 0.0555 - val_accuracy: 1.0000\n","\n","Epoch 00009: ReduceLROnPlateau reducing learning rate to 8.999999636216671e-07.\n","\n","Epoch 00009: val_accuracy did not improve from 1.00000\n","Epoch 10/10\n","57/57 [==============================] - 176s 3s/step - loss: 0.0794 - accuracy: 0.9929 - val_loss: 0.0449 - val_accuracy: 1.0000\n","\n","Epoch 00010: val_accuracy did not improve from 1.00000\n"]}]},{"cell_type":"code","metadata":{"id":"LlXVeed5YZX9"},"source":["pred = model.predict(X_test)\n","pred = np.argmax(pred,axis=1)\n","y_test_new = np.argmax(y_test,axis=1)"],"id":"LlXVeed5YZX9","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_aljV3NSYZ_b","executionInfo":{"status":"ok","timestamp":1634409378057,"user_tz":300,"elapsed":213,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"16813213-57b1-45bb-baf1-12735d8f1446"},"source":["print(classification_report(y_test_new,pred))"],"id":"_aljV3NSYZ_b","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        29\n","           1       1.00      1.00      1.00        42\n","\n","    accuracy                           1.00        71\n","   macro avg       1.00      1.00      1.00        71\n","weighted avg       1.00      1.00      1.00        71\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":464},"id":"IBGloy8eYlFY","executionInfo":{"status":"ok","timestamp":1634409385102,"user_tz":300,"elapsed":605,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"a450e1ea-d863-482e-b873-060c814bec6a"},"source":["fig,ax=plt.subplots(1,1,figsize=(14,7))\n","sns.heatmap(confusion_matrix(y_test_new,pred),ax=ax,xticklabels=['Alzheimer','PSP'],yticklabels=['Alzheimer','PSP'],annot=True,\n","           cmap=colors_green[::-1],alpha=0.7,linewidths=2,linecolor=colors_dark[3])\n","fig.text(s='Heatmap of the Confusion Matrix',size=18,fontweight='bold',\n","             fontname='monospace',color=colors_dark[1],y=0.92,x=0.28,alpha=0.8)\n","\n","plt.show()"],"id":"IBGloy8eYlFY","execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1008x504 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h-vgUHRRYonU","executionInfo":{"status":"ok","timestamp":1634409397427,"user_tz":300,"elapsed":2369,"user":{"displayName":"Liliana Díaz Gómez","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15724017853417570220"}},"outputId":"9d39f2dc-2354-4c24-e40c-36014fa4847e"},"source":["model.save('/content/drive/MyDrive/Tesis Maestria/Models in h5 format/ResNet50FreezingLayers/RESNET50CortezaEntorrinalFreezingDeeperEntireModel.h5')"],"id":"h-vgUHRRYonU","execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/utils/generic_utils.py:497: CustomMaskWarning: Custom mask layers require a config and must override get_config. When loading, the custom mask layer must be passed to the custom_objects argument.\n","  category=CustomMaskWarning)\n"]}]}]}